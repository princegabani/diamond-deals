function s(n){if(!n)throw new Error("Hex color is undefined!");if(!/^#[0-9A-F]{6}$/i.test(n))throw new Error(`Invalid hex color: ${n}`);let t=parseInt(n.substring(1,3),16),e=parseInt(n.substring(3,5),16),r=parseInt(n.substring(5,7),16);return`${t} ${e} ${r}`}function a(n){let t={};return Object.entries(n).forEach(([e,r])=>{r&&(t[`${e}Channel`]=s(r))}),{...n,...t}}function i(n,t=1){if(!n)throw new Error("[Alpha]: Color is undefined!");if(n.startsWith("#")||n.startsWith("rgb")||n.startsWith("rgba")||!n.includes("var")&&n.includes("Channel"))throw new Error([`[Alpha]: Unsupported color format "${n}"`,"Supported formats are:",'- RGB channels: "0 184 217"','- CSS variables with "Channel" prefix: "var(--palette-common-blackChannel, #000000)"',"Unsupported formats are:",'- Hex: "#00B8D9"','- RGB: "rgb(0, 184, 217)"','- RGBA: "rgba(0, 184, 217, 1)"'].join(`
`));return`rgba(${n} / ${t})`}export{a as createPaletteChannel,s as hexToRgbChannel,i as varAlpha};
