"use strict";var a=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var u=Object.getOwnPropertyNames;var o=Object.prototype.hasOwnProperty;var d=(n,t)=>{for(var e in t)a(n,e,{get:t[e],enumerable:!0})},g=(n,t,e,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of u(t))!o.call(n,s)&&s!==e&&a(n,s,{get:()=>t[s],enumerable:!(r=p(t,s))||r.enumerable});return n};var h=n=>g(a({},"__esModule",{value:!0}),n);var c={};d(c,{createPaletteChannel:()=>l,hexToRgbChannel:()=>i,varAlpha:()=>f});module.exports=h(c);function i(n){if(!n)throw new Error("Hex color is undefined!");if(!/^#[0-9A-F]{6}$/i.test(n))throw new Error(`Invalid hex color: ${n}`);let t=parseInt(n.substring(1,3),16),e=parseInt(n.substring(3,5),16),r=parseInt(n.substring(5,7),16);return`${t} ${e} ${r}`}function l(n){let t={};return Object.entries(n).forEach(([e,r])=>{r&&(t[`${e}Channel`]=i(r))}),{...n,...t}}function f(n,t=1){if(!n)throw new Error("[Alpha]: Color is undefined!");if(n.startsWith("#")||n.startsWith("rgb")||n.startsWith("rgba")||!n.includes("var")&&n.includes("Channel"))throw new Error([`[Alpha]: Unsupported color format "${n}"`,"Supported formats are:",'- RGB channels: "0 184 217"','- CSS variables with "Channel" prefix: "var(--palette-common-blackChannel, #000000)"',"Unsupported formats are:",'- Hex: "#00B8D9"','- RGB: "rgb(0, 184, 217)"','- RGBA: "rgba(0, 184, 217, 1)"'].join(`
`));return`rgba(${n} / ${t})`}0&&(module.exports={createPaletteChannel,hexToRgbChannel,varAlpha});
